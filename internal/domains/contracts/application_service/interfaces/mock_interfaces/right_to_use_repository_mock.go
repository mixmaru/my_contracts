// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domains/contracts/application_service/interfaces/right_to_use_repository_interface.go

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	gomock "github.com/golang/mock/gomock"
	entities "github.com/mixmaru/my_contracts/internal/domains/contracts/entities"
	gorp "gopkg.in/gorp.v2"
	reflect "reflect"
)

// MockIRightToUseRepository is a mock of IRightToUseRepository interface.
type MockIRightToUseRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIRightToUseRepositoryMockRecorder
}

// MockIRightToUseRepositoryMockRecorder is the mock recorder for MockIRightToUseRepository.
type MockIRightToUseRepositoryMockRecorder struct {
	mock *MockIRightToUseRepository
}

// NewMockIRightToUseRepository creates a new mock instance.
func NewMockIRightToUseRepository(ctrl *gomock.Controller) *MockIRightToUseRepository {
	mock := &MockIRightToUseRepository{ctrl: ctrl}
	mock.recorder = &MockIRightToUseRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRightToUseRepository) EXPECT() *MockIRightToUseRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIRightToUseRepository) Create(rightToUseEntity *entities.RightToUseEntity, executor gorp.SqlExecutor) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", rightToUseEntity, executor)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockIRightToUseRepositoryMockRecorder) Create(rightToUseEntity, executor interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIRightToUseRepository)(nil).Create), rightToUseEntity, executor)
}
